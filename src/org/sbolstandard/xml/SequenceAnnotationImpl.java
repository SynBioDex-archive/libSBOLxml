//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2011.09.12 at 11:06:26 AM PDT 
//


package org.sbolstandard.xml;

import java.util.List;
import java.util.Iterator;
import java.util.ArrayList;
import javax.xml.namespace.QName;
import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElementRef;
import javax.xml.bind.annotation.XmlID;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;

import org.sbolstandard.core.*;

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "SequenceAnnotationImpl", propOrder = { "feature", "precede" })
public class SequenceAnnotationImpl implements SequenceAnnotation {

    protected List<DnaComponentImpl> feature = new ArrayList<DnaComponentImpl>();
    protected List<PrecedeReference> precede = new ArrayList<PrecedeReference>();

    @XmlAttribute(required = true)
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlID
    @XmlSchemaType(name = "ID")
    protected String id = null;
    @XmlAttribute(required = true)
    protected int genbankStart = 1;
    @XmlAttribute(required = true)
    protected int end = 1;
    @XmlAttribute(required = true)
    protected String strand = null;

    public SequenceAnnotationImpl(){ this(null); }

    public SequenceAnnotationImpl(String id){ this.id = id; }

    public void addPrecede(SequenceAnnotation annotation) {
        this.precede.add(new PrecedeReference((SequenceAnnotationImpl)annotation));
    }
    public java.util.Collection<SequenceAnnotation> getPrecedes(){
        ArrayList<SequenceAnnotation> result = new ArrayList<SequenceAnnotation>();
        for(int i=0; i < precede.size(); i++) result.add(precede.get(i).getSequenceAnnotation());
        return result;
    }

    public java.util.Collection<DnaComponent> getFeatures(){
        ArrayList<DnaComponent> result = new ArrayList<DnaComponent>();
        for(int i=0; i < feature.size(); i++) result.add(feature.get(i));
        return result;
    }
    public void addFeature(DnaComponent feature){
        this.feature.add((DnaComponentImpl)precede);
    }

    public String getId() { return id; }
    public void setId(String value) { this.id = value; }

    public int getGenbankStart() { return genbankStart; }
    public void setGenbankStart(int value) { this.genbankStart = value; }

    public int getEnd() { return end; }
    public void setEnd(int value) { this.end = value; }

    public String getStrand() { return strand; }
    public void setStrand(String value) { this.strand = value; }

    // Below here are methods used only by the XML engine
    public List<DnaComponentImpl> getFeature() { return this.feature; }
    public List<PrecedeReference> getPrecede() { return this.precede; }
    
    public void cleanupPostParse(DnaComponentImpl component){
        Iterator<PrecedeReference> iter = getPrecede().iterator();
        while(iter.hasNext()){
            PrecedeReference ref = iter.next();
            if(ref.getSequenceAnnotation() == null){
                SequenceAnnotationImpl sa = component.getSequenceAnnotation(ref.getId());
                if(sa == null){
                    System.err.println("Could not find referenced sequence annotation: " + ref.getId());
                } else {
                    ref.setSequenceAnnotation(sa);
                }
            }
        }
    }

}
